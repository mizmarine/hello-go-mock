// Code generated by MockGen. DO NOT EDIT.
// Source: todo.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	entity "hello-go-mock/src/entity"
	reflect "reflect"
)

// MockToDoWriter is a mock of ToDoWriter interface
type MockToDoWriter struct {
	ctrl     *gomock.Controller
	recorder *MockToDoWriterMockRecorder
}

// MockToDoWriterMockRecorder is the mock recorder for MockToDoWriter
type MockToDoWriterMockRecorder struct {
	mock *MockToDoWriter
}

// NewMockToDoWriter creates a new mock instance
func NewMockToDoWriter(ctrl *gomock.Controller) *MockToDoWriter {
	mock := &MockToDoWriter{ctrl: ctrl}
	mock.recorder = &MockToDoWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockToDoWriter) EXPECT() *MockToDoWriterMockRecorder {
	return m.recorder
}

// CreateToDo mocks base method
func (m *MockToDoWriter) CreateToDo(t entity.ToDo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToDo", t)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateToDo indicates an expected call of CreateToDo
func (mr *MockToDoWriterMockRecorder) CreateToDo(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToDo", reflect.TypeOf((*MockToDoWriter)(nil).CreateToDo), t)
}
